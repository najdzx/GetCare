-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.admin_activities (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  admin_id uuid,
  action text NOT NULL,
  entity_type text,
  entity_id uuid,
  description text,
  details jsonb,
  ip_address text,
  user_agent text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT admin_activities_pkey PRIMARY KEY (id),
  CONSTRAINT admin_activities_admin_id_fkey FOREIGN KEY (admin_id) REFERENCES public.users(id)
);
CREATE TABLE public.appointments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  patient_id uuid,
  doctor_id uuid,
  clinic_id uuid,
  appointment_date date NOT NULL,
  appointment_time text NOT NULL,
  duration_minutes integer NOT NULL DEFAULT 30,
  type text NOT NULL,
  status text NOT NULL DEFAULT 'PENDING'::text,
  is_online boolean NOT NULL DEFAULT false,
  meet_link text,
  chief_complaint text,
  notes text,
  admin_notes text,
  cancellation_reason text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT appointments_pkey PRIMARY KEY (id),
  CONSTRAINT appointments_clinic_id_fkey FOREIGN KEY (clinic_id) REFERENCES public.clinics(id),
  CONSTRAINT appointments_doctor_id_fkey FOREIGN KEY (doctor_id) REFERENCES public.doctor_profiles(id),
  CONSTRAINT appointments_patient_id_fkey FOREIGN KEY (patient_id) REFERENCES public.patient_profiles(id)
);
CREATE TABLE public.clinics (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL,
  address text NOT NULL,
  city text,
  state text,
  postal_code text,
  phone text,
  email text,
  operating_hours jsonb,
  facilities ARRAY,
  is_active boolean NOT NULL DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT clinics_pkey PRIMARY KEY (id)
);
CREATE TABLE public.conversations (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  patient_id uuid,
  doctor_id uuid,
  status text NOT NULL DEFAULT 'ACTIVE'::text,
  last_message_at timestamp with time zone,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT conversations_pkey PRIMARY KEY (id),
  CONSTRAINT conversations_patient_id_fkey FOREIGN KEY (patient_id) REFERENCES public.patient_profiles(id),
  CONSTRAINT conversations_doctor_id_fkey FOREIGN KEY (doctor_id) REFERENCES public.doctor_profiles(id)
);
CREATE TABLE public.doctor_availability (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  doctor_id uuid,
  day_of_week integer NOT NULL,
  start_time text NOT NULL,
  end_time text NOT NULL,
  clinic_id uuid,
  is_active boolean NOT NULL DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT doctor_availability_pkey PRIMARY KEY (id),
  CONSTRAINT doctor_availability_doctor_id_fkey FOREIGN KEY (doctor_id) REFERENCES public.doctor_profiles(id),
  CONSTRAINT doctor_availability_clinic_id_fkey FOREIGN KEY (clinic_id) REFERENCES public.clinics(id)
);
CREATE TABLE public.doctor_clinics (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  doctor_id uuid,
  clinic_id uuid,
  is_primary boolean NOT NULL DEFAULT false,
  available_days ARRAY,
  start_time text,
  end_time text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT doctor_clinics_pkey PRIMARY KEY (id),
  CONSTRAINT doctor_clinics_clinic_id_fkey FOREIGN KEY (clinic_id) REFERENCES public.clinics(id),
  CONSTRAINT doctor_clinics_doctor_id_fkey FOREIGN KEY (doctor_id) REFERENCES public.doctor_profiles(id)
);
CREATE TABLE public.doctor_profiles (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid UNIQUE,
  specialization text NOT NULL,
  years_of_experience integer,
  license_number text UNIQUE,
  certifications text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  first_name text NOT NULL,
  middle_name text,
  last_name text NOT NULL,
  sex text,
  phone_number text,
  email text NOT NULL,
  prc_license_number text NOT NULL,
  ptr_license_number text NOT NULL,
  affiliated_hospital text,
  training text,
  CONSTRAINT doctor_profiles_pkey PRIMARY KEY (id),
  CONSTRAINT doctor_profiles_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.file_attachments (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  entity_type text NOT NULL,
  entity_id uuid NOT NULL,
  file_name text NOT NULL,
  file_url text NOT NULL,
  file_size integer,
  file_type text,
  uploaded_by_id uuid,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT file_attachments_pkey PRIMARY KEY (id),
  CONSTRAINT file_attachments_uploaded_by_id_fkey FOREIGN KEY (uploaded_by_id) REFERENCES public.users(id)
);
CREATE TABLE public.lab_results (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  test_request_id uuid,
  patient_id uuid,
  result_data jsonb,
  result_file_url text,
  result_date date,
  notes text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT lab_results_pkey PRIMARY KEY (id),
  CONSTRAINT lab_results_test_request_id_fkey FOREIGN KEY (test_request_id) REFERENCES public.lab_test_requests(id),
  CONSTRAINT lab_results_patient_id_fkey FOREIGN KEY (patient_id) REFERENCES public.patient_profiles(id)
);
CREATE TABLE public.lab_test_requests (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  soap_note_id uuid,
  patient_id uuid,
  doctor_id uuid,
  test_name text NOT NULL,
  test_type text,
  instructions text,
  urgency text NOT NULL DEFAULT 'ROUTINE'::text,
  status text NOT NULL DEFAULT 'PENDING'::text,
  is_sent_to_patient boolean NOT NULL DEFAULT false,
  requested_date date NOT NULL DEFAULT now(),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT lab_test_requests_pkey PRIMARY KEY (id),
  CONSTRAINT lab_test_requests_soap_note_id_fkey FOREIGN KEY (soap_note_id) REFERENCES public.soap_notes(id),
  CONSTRAINT lab_test_requests_patient_id_fkey FOREIGN KEY (patient_id) REFERENCES public.patient_profiles(id),
  CONSTRAINT lab_test_requests_doctor_id_fkey FOREIGN KEY (doctor_id) REFERENCES public.doctor_profiles(id)
);
CREATE TABLE public.medical_backgrounds (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  patient_id uuid UNIQUE,
  known_conditions text,
  allergies text,
  previous_surgeries text,
  family_history text,
  current_medications text,
  supplements text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT medical_backgrounds_pkey PRIMARY KEY (id),
  CONSTRAINT medical_backgrounds_patient_id_fkey FOREIGN KEY (patient_id) REFERENCES public.patient_profiles(id)
);
CREATE TABLE public.messages (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  conversation_id uuid,
  sender_id uuid,
  message_type text NOT NULL DEFAULT 'TEXT'::text,
  content text,
  file_url text,
  file_name text,
  file_size integer,
  is_read boolean NOT NULL DEFAULT false,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT messages_pkey PRIMARY KEY (id),
  CONSTRAINT messages_sender_id_fkey FOREIGN KEY (sender_id) REFERENCES public.users(id),
  CONSTRAINT messages_conversation_id_fkey FOREIGN KEY (conversation_id) REFERENCES public.conversations(id)
);
CREATE TABLE public.notifications (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  type text NOT NULL,
  title text,
  message text,
  data jsonb,
  is_read boolean NOT NULL DEFAULT false,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT notifications_pkey PRIMARY KEY (id),
  CONSTRAINT notifications_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.patient_notes (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  patient_id uuid,
  doctor_id uuid,
  subject text,
  content text NOT NULL,
  note_type text NOT NULL DEFAULT 'general'::text,
  visibility text NOT NULL DEFAULT 'ALL'::text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT patient_notes_pkey PRIMARY KEY (id),
  CONSTRAINT patient_notes_patient_id_fkey FOREIGN KEY (patient_id) REFERENCES public.patient_profiles(id),
  CONSTRAINT patient_notes_doctor_id_fkey FOREIGN KEY (doctor_id) REFERENCES public.doctor_profiles(id)
);
CREATE TABLE public.patient_profiles (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid UNIQUE,
  blood_type text,
  civil_status text,
  philhealth_no text,
  medical_conditions text,
  allergies text,
  surgeries text,
  family_history text,
  medications text,
  supplements text,
  tag text NOT NULL DEFAULT 'ongoing'::text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  first_name text NOT NULL,
  last_name text NOT NULL,
  suffix text,
  nickname text,
  date_of_birth date,
  age integer,
  sex text,
  primary_mobile text,
  email text,
  CONSTRAINT patient_profiles_pkey PRIMARY KEY (id),
  CONSTRAINT patient_profiles_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.patient_visits (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  patient_id uuid,
  doctor_id uuid,
  appointment_id uuid UNIQUE,
  visit_date date NOT NULL,
  visit_type text NOT NULL,
  chief_complaint text,
  diagnosis text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT patient_visits_pkey PRIMARY KEY (id),
  CONSTRAINT patient_visits_patient_id_fkey FOREIGN KEY (patient_id) REFERENCES public.patient_profiles(id),
  CONSTRAINT patient_visits_doctor_id_fkey FOREIGN KEY (doctor_id) REFERENCES public.doctor_profiles(id),
  CONSTRAINT patient_visits_appointment_id_fkey FOREIGN KEY (appointment_id) REFERENCES public.appointments(id)
);
CREATE TABLE public.prescriptions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  soap_note_id uuid,
  patient_id uuid,
  doctor_id uuid,
  medication_name text NOT NULL,
  dosage text,
  frequency text,
  duration text,
  quantity text,
  instructions text,
  is_sent_to_patient boolean NOT NULL DEFAULT false,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT prescriptions_pkey PRIMARY KEY (id),
  CONSTRAINT prescriptions_soap_note_id_fkey FOREIGN KEY (soap_note_id) REFERENCES public.soap_notes(id),
  CONSTRAINT prescriptions_patient_id_fkey FOREIGN KEY (patient_id) REFERENCES public.patient_profiles(id),
  CONSTRAINT prescriptions_doctor_id_fkey FOREIGN KEY (doctor_id) REFERENCES public.doctor_profiles(id)
);
CREATE TABLE public.shared_cases (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  patient_id uuid,
  sharing_doctor_id uuid,
  receiving_doctor_id uuid,
  case_description text,
  shared_data jsonb,
  permissions jsonb,
  status text NOT NULL DEFAULT 'PENDING'::text,
  expires_at timestamp with time zone,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT shared_cases_pkey PRIMARY KEY (id),
  CONSTRAINT shared_cases_patient_id_fkey FOREIGN KEY (patient_id) REFERENCES public.patient_profiles(id),
  CONSTRAINT shared_cases_sharing_doctor_id_fkey FOREIGN KEY (sharing_doctor_id) REFERENCES public.doctor_profiles(id),
  CONSTRAINT shared_cases_receiving_doctor_id_fkey FOREIGN KEY (receiving_doctor_id) REFERENCES public.doctor_profiles(id)
);
CREATE TABLE public.soap_notes (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  visit_id uuid,
  patient_id uuid,
  doctor_id uuid,
  date date NOT NULL,
  subjective text,
  chief_complaint text,
  history_of_illness text,
  objective text,
  vital_signs jsonb,
  assessment text,
  diagnosis text,
  plan text,
  prescription text,
  test_request text,
  remarks text,
  remarks_note text,
  remarks_template text,
  follow_up_date date,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT soap_notes_pkey PRIMARY KEY (id),
  CONSTRAINT soap_notes_doctor_id_fkey FOREIGN KEY (doctor_id) REFERENCES public.doctor_profiles(id),
  CONSTRAINT soap_notes_visit_id_fkey FOREIGN KEY (visit_id) REFERENCES public.patient_visits(id),
  CONSTRAINT soap_notes_patient_id_fkey FOREIGN KEY (patient_id) REFERENCES public.patient_profiles(id)
);
CREATE TABLE public.users (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  email text NOT NULL UNIQUE CHECK (email ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'::text),
  first_name text NOT NULL,
  last_name text NOT NULL,
  middle_name text,
  suffix text,
  nickname text,
  full_name text NOT NULL,
  role text NOT NULL DEFAULT 'PATIENT'::text CHECK (role = ANY (ARRAY['PATIENT'::text, 'DOCTOR'::text, 'ADMIN'::text])),
  phone_number text,
  primary_mobile text,
  date_of_birth date,
  age integer,
  sex text CHECK (sex = ANY (ARRAY['MALE'::text, 'FEMALE'::text, 'OTHER'::text])),
  profile_image_url text,
  is_active boolean NOT NULL DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  email_verified boolean NOT NULL DEFAULT false,
  phone_verified boolean NOT NULL DEFAULT false,
  last_login_at timestamp with time zone,
  CONSTRAINT users_pkey PRIMARY KEY (id)
);